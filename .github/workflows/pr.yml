name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  deployments: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"

      - name: Cache bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock', '**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies
        run: |
          bundle config set --local path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build
        env:
          JEKYLL_ENV: production
        run: bundle exec jekyll build --future --trace

      - name: Publish to Cloudflare Pages
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4"
          command: pages deploy _site --project-name=${{ vars.CLOUDFLARE_PROJECT_NAME }} --branch=${{ github.head_ref }} --commit-dirty=true

      - name: Deployment URL
        env:
          DEPLOYMENT_ALIAS_URL: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
        run: echo "$DEPLOYMENT_ALIAS_URL"

      - name: GH actions summary
        env:
          DEPLOYMENT_ALIAS_URL: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
        run: |
          echo "Deployed to:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— $DEPLOYMENT_ALIAS_URL" >> $GITHUB_STEP_SUMMARY

      - name: Comment with deployment URL
        uses: actions/github-script@v7
        env:
          DEPLOYMENT_ALIAS_URL: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
        with:
          github-token: ${{ github.token }}
          script: |
            const sticky = '<!-- DEPLOY_PREVIEW -->';
            const body = `${sticky}\nDeployment available at:\nðŸ”— ${process.env.DEPLOYMENT_ALIAS_URL}`;
            const {data: comments} = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const prev = comments.find(c => c.body.startsWith(sticky));
            if (prev) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: prev.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }
